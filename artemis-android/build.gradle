apply plugin: 'com.android.application'

repositories { mavenCentral() }

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':appirater-android')
//    compile 'com.parse.bolts:bolts-android:1.+'
//   compile 'com.parse:parse-android:1.+'
}

android {
<<<<<<< HEAD
<<<<<<< HEAD
    compileSdkVersion 22
    buildToolsVersion "22.0.1"
=======
    compileSdkVersion 21
    buildToolsVersion "21.1"
>>>>>>> 48b25e2 (changes towards lollipop camera api support)
=======
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
>>>>>>> e1c2f29 (halejlujah it fucking works!  Real pics (zoom in only for now))

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 21
    }

    useLibrary 'org.apache.http.legacy'


    buildTypes {
        release {
            minifyEnabled true
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFile 'proguard-project.txt'
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['rs']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}
